THREE.OBJMTLLoader=function(){THREE.EventDispatcher.call(this)},THREE.OBJMTLLoader.prototype={constructor:THREE.OBJMTLLoader,load:function(e,t,n){function f(n){if(n.type==="load")if(n.content instanceof THREE.MTLLoader.MaterialCreator)s=!0,u=n.content,u.preload();else if(n.target.status===200||n.target.status===0){var i=n.target.responseText;t?o=r.parse(i):o=r.parse(i,function(e){s=!1,a.load(a.baseUrl+e)})}else r.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]",response:n.target.responseText});else n.type==="error"&&(s=!0);s&&o&&(u&&o.traverse(function(e){if(e instanceof THREE.Mesh&&e.material.name){var t=u.create(e.material.name);t&&(e.material=t)}}),r.dispatchEvent({type:"load",content:o}))}var r=this,i=new XMLHttpRequest,s,o,u,a=new THREE.MTLLoader(e.substr(0,e.lastIndexOf("/")+1),n);a.addEventListener("load",f),a.addEventListener("error",f),t?(a.load(t),s=!1):s=!0,i.addEventListener("load",f,!1),i.addEventListener("progress",function(e){r.dispatchEvent({type:"progress",loaded:e.loaded,total:e.total})},!1),i.addEventListener("error",function(){r.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),i.open("GET",e,!0),i.send(null)},parse:function(e,t){function n(e,t,n){return new THREE.Vector3(e,t,n)}function r(e,t){return new THREE.Vector2(e,t)}function i(e,t,n,r){return new THREE.Face3(e,t,n,r)}function s(e,t,n,r,i){return new THREE.Face4(e,t,n,r,i)}function o(e,t){f.vertices.length>0&&(f.mergeVertices(),f.computeCentroids(),f.computeFaceNormals(),f.computeBoundingSphere(),a.add(c),f=new THREE.Geometry,c=new THREE.Mesh(f,l),p=0),e!==undefined&&(c.name=e),t!==undefined&&(l=new THREE.MeshLambertMaterial,l.name=t,c.material=l)}e=e.replace(/\ \\\r\n/g,"");var u=new THREE.Object3D,a=u,f=new THREE.Geometry,l=new THREE.MeshLambertMaterial,c=new THREE.Mesh(f,l),h=[],p=0,d=[],v=[],m=/v( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,g=/vn( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,y=/vt( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,b=/f( +\d+)( +\d+)( +\d+)( +\d+)?/,w=/f( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))?/,E=/f( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))?/,S=/f( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))?/,x=e.split("\n");for(var T=0;T<x.length;T++){var N=x[T];N=N.trim();var C;if(N.length===0||N.charAt(0)==="#")continue;if((C=m.exec(N))!==null)h.push(n(parseFloat(C[1]),parseFloat(C[2]),parseFloat(C[3])));else if((C=g.exec(N))!==null)d.push(n(parseFloat(C[1]),parseFloat(C[2]),parseFloat(C[3])));else if((C=y.exec(N))!==null)v.push(r(parseFloat(C[1]),parseFloat(C[2])));else if((C=b.exec(N))!==null)C[4]===undefined?(f.vertices.push(h[parseInt(C[1])-1],h[parseInt(C[2])-1],h[parseInt(C[3])-1]),f.faces.push(i(p++,p++,p++))):(f.vertices.push(h[parseInt(C[1])-1],h[parseInt(C[2])-1],h[parseInt(C[3])-1],h[parseInt(C[4])-1]),f.faces.push(s(p++,p++,p++,p++)));else if((C=w.exec(N))!==null)C[10]===undefined?(f.vertices.push(h[parseInt(C[2])-1],h[parseInt(C[5])-1],h[parseInt(C[8])-1]),f.faces.push(i(p++,p++,p++)),f.faceVertexUvs[0].push([v[parseInt(C[3])-1],v[parseInt(C[6])-1],v[parseInt(C[9])-1]])):(f.vertices.push(h[parseInt(C[2])-1],h[parseInt(C[5])-1],h[parseInt(C[8])-1],h[parseInt(C[11])-1]),f.faces.push(s(p++,p++,p++,p++)),f.faceVertexUvs[0].push([v[parseInt(C[3])-1],v[parseInt(C[6])-1],v[parseInt(C[9])-1],v[parseInt(C[12])-1]]));else if((C=E.exec(N))!==null)C[13]===undefined?(f.vertices.push(h[parseInt(C[2])-1],h[parseInt(C[6])-1],h[parseInt(C[10])-1]),f.faces.push(i(p++,p++,p++,[d[parseInt(C[4])-1],d[parseInt(C[8])-1],d[parseInt(C[12])-1]])),f.faceVertexUvs[0].push([v[parseInt(C[3])-1],v[parseInt(C[7])-1],v[parseInt(C[11])-1]])):(f.vertices.push(h[parseInt(C[2])-1],h[parseInt(C[6])-1],h[parseInt(C[10])-1],h[parseInt(C[14])-1]),f.faces.push(s(p++,p++,p++,p++,[d[parseInt(C[4])-1],d[parseInt(C[8])-1],d[parseInt(C[12])-1],d[parseInt(C[16])-1]])),f.faceVertexUvs[0].push([v[parseInt(C[3])-1],v[parseInt(C[7])-1],v[parseInt(C[11])-1],v[parseInt(C[15])-1]]));else if((C=S.exec(N))!==null)C[10]===undefined?(f.vertices.push(h[parseInt(C[2])-1],h[parseInt(C[5])-1],h[parseInt(C[8])-1]),f.faces.push(i(p++,p++,p++,[d[parseInt(C[3])-1],d[parseInt(C[6])-1],d[parseInt(C[9])-1]]))):(f.vertices.push(h[parseInt(C[2])-1],h[parseInt(C[5])-1],h[parseInt(C[8])-1],h[parseInt(C[11])-1]),f.faces.push(s(p++,p++,p++,p++,[d[parseInt(C[3])-1],d[parseInt(C[6])-1],d[parseInt(C[9])-1],d[parseInt(C[12])-1]])));else if(/^o /.test(N))a=new THREE.Object3D,a.name=N.substring(2).trim(),u.add(a);else if(/^g /.test(N))o(N.substring(2).trim(),undefined);else if(/^usemtl /.test(N))o(undefined,N.substring(7).trim());else if(/^mtllib /.test(N)){if(t){var k=N.substring(7);k=k.trim(),t(k)}}else/^s /.test(N)||console.log("THREE.OBJMTLLoader: Unhandled line "+N)}return o(undefined,undefined),u}};