THREE.MTLLoader=function(e,t){THREE.EventDispatcher.call(this),this.baseUrl=e,this.options=t},THREE.MTLLoader.prototype={load:function(e){function r(n){if(n.target.status===200||n.target.status===0){var r=t.parse(n.target.responseText);t.dispatchEvent({type:"load",content:r})}else t.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]",response:n.target.responseText})}var t=this,n=new XMLHttpRequest;n.addEventListener("load",r,!1),n.addEventListener("progress",function(e){t.dispatchEvent({type:"progress",loaded:e.loaded,total:e.total})},!1),n.addEventListener("error",function(){t.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),n.open("GET",e,!0),n.send(null)},parse:function(e){var t=e.split("\n"),n={},r=/\s+/,i={};for(var s=0;s<t.length;s++){var o=t[s];o=o.trim();if(o.length===0||o.charAt(0)==="#")continue;var u=o.indexOf(" "),a=u>=0?o.substring(0,u):o;a=a.toLowerCase();var f=u>=0?o.substring(u+1):"";f=f.trim();if(a==="newmtl")n={name:f},i[f]=n;else if(n)if(a==="ka"||a==="kd"||a==="ks"){var l=f.split(r,3);n[a]=[parseFloat(l[0]),parseFloat(l[1]),parseFloat(l[2])]}else n[a]=f}var c=new THREE.MTLLoader.MaterialCreator(this.baseUrl,this.options);return c.setMaterials(i),c}},THREE.MTLLoader.MaterialCreator=function(e,t){THREE.EventDispatcher.call(this),this.baseUrl=e,this.options=t,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide,this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping},THREE.MTLLoader.MaterialCreator.prototype={setMaterials:function(e){this.materialsInfo=this.convert(e),this.materials={},this.materialsArray=[],this.nameLookup={}},convert:function(e){if(!this.options)return e;var t={};for(var n in e){var r=e[n],i={};t[n]=i;for(var s in r){var o=!0,u=r[s],a=s.toLowerCase();switch(a){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(u=[u[0]/255,u[1]/255,u[2]/255]),this.options&&this.options.ignoreZeroRGBs&&u[0]===0&&u[1]===0&&u[1]===0&&(o=!1);break;case"d":this.options&&this.options.invertTransparency&&(u=1-u);break;default:}o&&(i[a]=u)}}return t},preload:function(){for(var e in this.materialsInfo)this.create(e)},getIndex:function(e){return this.nameLookup[e]},getAsArray:function(){var e=0;for(var t in this.materialsInfo)this.materialsArray[e]=this.create(t),this.nameLookup[t]=e,e++;return this.materialsArray},create:function(e){return this.materials[e]===undefined&&this.createMaterial_(e),this.materials[e]},createMaterial_:function(e){var t=this.materialsInfo[e],n={name:e,side:this.side};for(var r in t){var i=t[r];switch(r.toLowerCase()){case"kd":n.diffuse=(new THREE.Color).setRGB(i[0],i[1],i[2]);break;case"ka":n.ambient=(new THREE.Color).setRGB(i[0],i[1],i[2]);break;case"ks":n.specular=(new THREE.Color).setRGB(i[0],i[1],i[2]);break;case"map_kd":n.map=THREE.MTLLoader.loadTexture(this.baseUrl+i),n.map.wrapS=this.wrap,n.map.wrapT=this.wrap;break;case"ns":n.shininess=i;break;case"d":i<1&&(n.transparent=!0,n.opacity=i);break;default:}}return n.diffuse&&(n.ambient||(n.ambient=n.diffuse),n.color=n.diffuse),this.materials[e]=new THREE.MeshPhongMaterial(n),this.materials[e]}},THREE.MTLLoader.loadTexture=function(e,t,n,r){var i=/\.dds$/i.test(e);if(i)var s=THREE.ImageUtils.loadCompressedTexture(e,t,n,r);else{var o=new Image,s=new THREE.Texture(o,t),u=new THREE.ImageLoader;u.addEventListener("load",function(e){s.image=THREE.MTLLoader.ensurePowerOfTwo_(e.content),s.needsUpdate=!0,n&&n(s)}),u.addEventListener("error",function(e){r&&r(e.message)}),u.crossOrigin=this.crossOrigin,u.load(e,o)}return s},THREE.MTLLoader.ensurePowerOfTwo_=function(e){if(!THREE.MTLLoader.isPowerOfTwo_(e.width)||!THREE.MTLLoader.isPowerOfTwo_(e.height)){var t=document.createElement("canvas");t.width=THREE.MTLLoader.nextHighestPowerOfTwo_(e.width),t.height=THREE.MTLLoader.nextHighestPowerOfTwo_(e.height);var n=t.getContext("2d");return n.drawImage(e,0,0,e.width,e.height,0,0,t.width,t.height),t}return e},THREE.MTLLoader.isPowerOfTwo_=function(e){return(e&e-1)===0},THREE.MTLLoader.nextHighestPowerOfTwo_=function(e){--e;for(var t=1;t<32;t<<=1)e|=e>>t;return e+1};