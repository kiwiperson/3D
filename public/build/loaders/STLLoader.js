THREE.STLLoader=function(){THREE.EventDispatcher.call(this)},THREE.STLLoader.prototype={constructor:THREE.STLLoader,load:function(e,t){var n=this,r=new XMLHttpRequest;r.addEventListener("load",function(e){var r;r=n.parse(e.target.response),n.dispatchEvent({type:"load",content:r}),t&&t(r)},!1),r.addEventListener("progress",function(e){n.dispatchEvent({type:"progress",loaded:e.loaded,total:e.total})},!1),r.addEventListener("error",function(){n.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),r.open("GET",e,!0),r.responseType="arraybuffer",r.send(null)},bin2str:function(e){var t=new Uint8Array(e),n="";for(var r=0;r<e.byteLength;r++)n+=String.fromCharCode(t[r]);return n},isASCII:function(e){var t=new DataView(e),n="";for(var r=0;r<5;r++)n+=String.fromCharCode(t.getUint8(r,!0));return n.toLowerCase()==="solid"},parse:function(e){if(this.isASCII(e)){var t=this.bin2str(e);return this.parseASCII(t)}return this.parseBinary(e)},parseASCII:function(e){var t=new THREE.Geometry,n=/facet([\s\S]*?)endfacet/g,r;while((r=n.exec(e))!=null){var i=r[0],s=/normal[\s]+([-+]?[0-9]+\.?[0-9]*([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+/g;while((r=s.exec(i))!=null)var o=new THREE.Vector3(parseFloat(r[1]),parseFloat(r[3]),parseFloat(r[5]));var u=/vertex[\s]+([-+]?[0-9]+\.?[0-9]*([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+/g;while((r=u.exec(i))!=null)t.vertices.push(new THREE.Vector3(parseFloat(r[1]),parseFloat(r[3]),parseFloat(r[5])));var a=t.vertices.length;t.faces.push(new THREE.Face3(a-3,a-2,a-1,o))}return t.computeCentroids(),t.computeBoundingSphere(),t},parseBinary:function(e){var t=new THREE.Geometry,n=80,r=84,i=50,s=!0,o=new DataView(e,n,4),u=o.getUint32(0,s);for(var a=0;a<u;a++){var f=new DataView(e,r+a*i,i),l=new THREE.Vector3(f.getFloat32(0,s),f.getFloat32(4,s),f.getFloat32(8,s));for(var c=3;c<12;c+=3)t.vertices.push(new THREE.Vector3(f.getFloat32(c*4,s),f.getFloat32((c+1)*4,s),f.getFloat32((c+2)*4,s)));var h=t.vertices.length;t.faces.push(new THREE.Face3(h-3,h-2,h-1,l))}return t.computeCentroids(),t.computeBoundingSphere(),t}};