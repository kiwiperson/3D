THREE.OBJLoader=function(){THREE.EventDispatcher.call(this)},THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(e,t){var n=this,r=new XMLHttpRequest;r.addEventListener("load",function(e){var r=n.parse(e.target.responseText);n.dispatchEvent({type:"load",content:r}),t&&t(r)},!1),r.addEventListener("progress",function(e){n.dispatchEvent({type:"progress",loaded:e.loaded,total:e.total})},!1),r.addEventListener("error",function(){n.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),r.open("GET",e,!0),r.send(null)},parse:function(e){function t(e,t,n){return new THREE.Vector3(e,t,n)}function n(e,t){return new THREE.Vector2(e,t)}function r(e,t,n,r){return new THREE.Face3(e,t,n,r)}function i(e,t,n,r,i){return new THREE.Face4(e,t,n,r,i)}function s(e,t){a.vertices.length>0&&(a.mergeVertices(),a.computeCentroids(),a.computeFaceNormals(),a.computeBoundingSphere(),u.add(l),a=new THREE.Geometry,l=new THREE.Mesh(a,f),h=0),e!==undefined&&(l.name=e),t!==undefined&&(f=new THREE.MeshLambertMaterial,f.name=t,l.material=f)}e=e.replace(/\ \\\r\n/g,"");var o=new THREE.Object3D,u=o,a=new THREE.Geometry,f=new THREE.MeshLambertMaterial,l=new THREE.Mesh(a,f),c=[],h=0,p=[],d=[],v=/v( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,m=/vn( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,g=/vt( +[\d|\.|\+|\-|e]+)( +[\d|\.|\+|\-|e]+)/,y=/f( +\d+)( +\d+)( +\d+)( +\d+)?/,b=/f( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))( +(\d+)\/(\d+))?/,w=/f( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))( +(\d+)\/(\d+)\/(\d+))?/,E=/f( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))( +(\d+)\/\/(\d+))?/,S=e.split("\n");for(var x=0;x<S.length;x++){var T=S[x];T=T.trim();var N;if(T.length===0||T.charAt(0)==="#")continue;(N=v.exec(T))!==null?c.push(t(parseFloat(N[1]),parseFloat(N[2]),parseFloat(N[3]))):(N=m.exec(T))!==null?p.push(t(parseFloat(N[1]),parseFloat(N[2]),parseFloat(N[3]))):(N=g.exec(T))!==null?d.push(n(parseFloat(N[1]),parseFloat(N[2]))):(N=y.exec(T))!==null?N[4]===undefined?(a.vertices.push(c[parseInt(N[1])-1],c[parseInt(N[2])-1],c[parseInt(N[3])-1]),a.faces.push(r(h++,h++,h++))):(a.vertices.push(c[parseInt(N[1])-1],c[parseInt(N[2])-1],c[parseInt(N[3])-1],c[parseInt(N[4])-1]),a.faces.push(i(h++,h++,h++,h++))):(N=b.exec(T))!==null?N[10]===undefined?(a.vertices.push(c[parseInt(N[2])-1],c[parseInt(N[5])-1],c[parseInt(N[8])-1]),a.faces.push(r(h++,h++,h++)),a.faceVertexUvs[0].push([d[parseInt(N[3])-1],d[parseInt(N[6])-1],d[parseInt(N[9])-1]])):(a.vertices.push(c[parseInt(N[2])-1],c[parseInt(N[5])-1],c[parseInt(N[8])-1],c[parseInt(N[11])-1]),a.faces.push(i(h++,h++,h++,h++)),a.faceVertexUvs[0].push([d[parseInt(N[3])-1],d[parseInt(N[6])-1],d[parseInt(N[9])-1],d[parseInt(N[12])-1]])):(N=w.exec(T))!==null?N[13]===undefined?(a.vertices.push(c[parseInt(N[2])-1],c[parseInt(N[6])-1],c[parseInt(N[10])-1]),a.faces.push(r(h++,h++,h++,[p[parseInt(N[4])-1],p[parseInt(N[8])-1],p[parseInt(N[12])-1]])),a.faceVertexUvs[0].push([d[parseInt(N[3])-1],d[parseInt(N[7])-1],d[parseInt(N[11])-1]])):(a.vertices.push(c[parseInt(N[2])-1],c[parseInt(N[6])-1],c[parseInt(N[10])-1],c[parseInt(N[14])-1]),a.faces.push(i(h++,h++,h++,h++,[p[parseInt(N[4])-1],p[parseInt(N[8])-1],p[parseInt(N[12])-1],p[parseInt(N[16])-1]])),a.faceVertexUvs[0].push([d[parseInt(N[3])-1],d[parseInt(N[7])-1],d[parseInt(N[11])-1],d[parseInt(N[15])-1]])):(N=E.exec(T))!==null?N[10]===undefined?(a.vertices.push(c[parseInt(N[2])-1],c[parseInt(N[5])-1],c[parseInt(N[8])-1]),a.faces.push(r(h++,h++,h++,[p[parseInt(N[3])-1],p[parseInt(N[6])-1],p[parseInt(N[9])-1]]))):(a.vertices.push(c[parseInt(N[2])-1],c[parseInt(N[5])-1],c[parseInt(N[8])-1],c[parseInt(N[11])-1]),a.faces.push(i(h++,h++,h++,h++,[p[parseInt(N[3])-1],p[parseInt(N[6])-1],p[parseInt(N[9])-1],p[parseInt(N[12])-1]]))):/^o /.test(T)?(u=new THREE.Object3D,u.name=T.substring(2).trim(),o.add(u)):/^g /.test(T)?s(T.substring(2).trim(),undefined):/^usemtl /.test(T)?s(undefined,T.substring(7).trim()):/^mtllib /.test(T)||/^s /.test(T)}return s(undefined,undefined),o}};